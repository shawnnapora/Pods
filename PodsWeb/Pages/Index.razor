@page "/"
@using PodsWeb.Data
@using Pods.Odds

<h1>Odds</h1>

<h2>Select Cards</h2>
<SelectCardsComponent SelectCards=@_selectCards CardSelectedCallback=@CardClicked />

<h2>Table</h2>
<TableComponent Table=_table />

<h2>Odds</h2>
@if (_preflop)
{
    if (_table.Players[0].Card2 != null)
    {
        var statsHand = new StatsHoleCards(_table.Players[0]);
        var percent = $"{PreflopOdds.OddsByPlayers[9][statsHand]:P}";
        <span>@(percent)</span>
    }
    else
    {
        <span>Select cards to see odds</span>
    }
}
else
{
    <span>Not implemented</span>
}

<p>
    <button @onclick=@Reset>Reset</button>
</p>

@code
{
    private Table _table = new Table(9);
    private SelectCard[,] _selectCards;
    private bool _preflop = true;

    protected override Task OnInitializedAsync()
    {
        _selectCards = GetSelectCards();
        return Task.CompletedTask;
    }

    private SelectCard[,] GetSelectCards()
    {
        var cards = new SelectCard[4,13];
        var i = 0;
        foreach (var suit in Suits)
        {
            var j = 0;
            
            foreach (var rank in Ranks)
            {
                cards[i,j] = new SelectCard(new Card(suit, rank));
                j++;
            }
            
            i++;
        }
        
        return cards;
    }

    private void CardClicked(object _, SelectCard card)
    {
        if (card.IsActive)
        {
            return; // don't support undo here (yet?)
        }

        Table table = (Table)_table.Clone();
        if (table.Players[0].Card1 == null)
        {
            table.Players[0].Card1 = card;
        }
        else if (table.Players[0].Card2 == null)
        {
            table.Players[0].Card2 = card;
        }
        else if (table.CommunityCards.Count < 5)
        {
            table.AddCommunityCard(card);
        }
        else
        {
            return;
        }

        _table = table;
        card.IsActive = true;
        StateHasChanged();
    }
    
    private void Reset()
    {
        _table = new Table(9);
        _selectCards = GetSelectCards();
        StateHasChanged();
    }

    private static readonly Rank[] Ranks = (Rank[])Enum.GetValues(typeof(Rank));
    private static readonly Suit[] Suits = (Suit[]) Enum.GetValues(typeof(Suit));
}